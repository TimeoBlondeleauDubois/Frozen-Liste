@import '../Global/Global.scss';

@mixin transition($properties) {
    transition: $properties;
}

@mixin translate($x, $y) {
    transform: translate($x, $y);
}

@mixin transform($transform) {
    transform: $transform;
}

.transition {
  @include transition(all 0.25s ease-in-out)
}

.page-content {
    background-color: $primary-color-black;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    position: relative;
    overflow: hidden;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
}

.glow {
    position: absolute;
    width: 100%;
    max-width: 500px;
    aspect-ratio: 1 / 1;
    background-color: rgba(0, 55, 110, 0.253);
    border-radius: 50%;
    filter: blur(80px);
    transition: top 3s, left 3s;
    pointer-events: none;
}

.h1-connexion, .p-identifiant-connexion, .input-identifiant-connexion, .p-mdp-connexion, .input-mdp-connexion, .input-submit-connexion {
    z-index: 1;
}

.h1-connexion {
    font-family: $RobotoBold;
    font-size: $h1-size-pc;
    color: white;
    margin-left: $big-margin-left-pc;
    margin-right: $big-margin-right-pc;
    margin-top: $big-margin-top-pc;
    margin-bottom: 60px;
    margin-left: 50px;
    margin-right: 50px;
}

.form {
    flex-direction: column;
    align-items: center;
    position: relative;
    justify-content: center;
    display: flex;
    box-sizing: border-box;
}

.wrapper {
    background-color: $secondary-color-grey;
    border-radius: 40px;
} 

.input-submit-connexion {
    font-family: $RobotoBold;
    font-size: $p-size-pc;
    background-color: $secondary-color-grey;
    border: 1px solid white;
    border-radius: 15px;
    margin-left: $big-margin-left-pc;
    margin-right: $big-margin-right-pc;
    width: 160px;
    height: 60px;
    text-align: center;
    cursor: pointer;
    transition: all 300ms ease-in-out;
    color:  white;
    margin-bottom: $big-margin-bottom-pc;
    margin-top: 30px;
}

.input-submit-connexion:hover {
    background-color: $secondary-color-white;
    color: $secondary-color-grey;
}

.question {
    position: relative;
    margin-bottom: $small-margin-bottom-pc;
    
    &:first-of-type {
      padding-top: 0;
    }
      
    &:last-of-type {
      padding-bottom: 0;
    }
      
    label {
      @extend .transition;
      transform-origin: left center;
      color: white;
      box-sizing: border-box;
      padding: 5px 40px;
      display: block;
      position: absolute;
      margin-top: -52px;
      z-index: 2;
      pointer-events: none;
      font-family: $RobotoRegular;
      font-size: $p-size-pc;
    }
      
    input {
      @extend .transition;
      appearance: none;
      background-color: $secondary-color-grey;
      border: 1px solid white;
      line-height: 0;
      display: block;
      box-sizing: border-box;
      padding: 15px 40px;
      border-radius: 300px;
      color: white;
      position: relative;
      z-index: 1;
      font-size: $p-size-pc;
      font-family: $RobotoRegular;
      
      &:focus {
        outline: none;
        background: $primary-color-black;
        color: white;
        margin-top: 30px;
      }
        
      &:valid {
        margin-top: 30px;
      }
          
      &:focus ~ label {
        @include translate( 0 , -50px );
      }
      
      &:valid ~ label {
        font-family: $RobotoBold;
        text-transform: uppercase;
        @include transform( translate( 5px , -50px ) scale(0.6));
      }
    }
}

@media screen and (max-width: 0px) {
}